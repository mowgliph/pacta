@use 'variables' as v;
@use 'colors' as c;
@use 'typography' as ty;
@use 'sass:color';

// Helper function to replace darken()
@function darken-compat($color, $amount) {
  @return color.scale($color, $lightness: -$amount);
}

// Copyright mixin
@mixin copyright {
  font-size: v.$font-size-xs;
  color: c.$color-text-secondary;
  text-align: center;
  padding: v.$spacing-unit * 2 0;
  
  a {
    color: c.$color-accent;
    text-decoration: none;
    transition: opacity v.$transition-fast;
    
    &:hover {
      opacity: 0.8;
    }
  }
}

// Container mixin
@mixin container {
  max-width: v.$container-width;
  margin: 0 auto;
  padding: 0 v.$spacing-unit;
}

// Grid mixin
@mixin grid($columns: 12) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  grid-gap: v.$spacing-unit;
}

// Responsive grid mixin
@mixin responsive-grid($columns: 12, $breakpoint: tablet) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  grid-gap: v.$spacing-unit;

  @if $breakpoint == tablet {
    @media screen and (max-width: 768px) {
      grid-template-columns: repeat($columns, 1fr);
    }
  } @else if $breakpoint == mobile {
    @media screen and (max-width: 640px) {
      grid-template-columns: repeat($columns, 1fr);
    }
  }
}

// Interactive States
@mixin hover-state {
  transition: all 0.2s ease;
  &:hover:not(:disabled) {
    background-color: var(--color-surface-hover);
  }
}

@mixin focus-state {
  &:focus {
    outline: none;
    border-color: c.$color-primary;
    box-shadow: 0 0 0 2px rgba(c.$color-primary, 0.2);
  }
}

@mixin card {
  background-color: c.$color-surface;
  border-radius: v.$border-radius-md;
  box-shadow: v.$shadow-sm;
  padding: v.$spacing-lg;
  transition: transform v.$transition-normal, box-shadow v.$transition-normal;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: v.$shadow-md;
  }
}

@mixin input {
  width: 100%;
  padding: v.$spacing-unit * 2;
  border: 1px solid c.$color-border;
  border-radius: v.$border-radius;

  &:focus {
    outline: none;
    border-color: c.$color-accent;
  }
}

@mixin button-outline {
  background-color: transparent;
  border: 1px solid c.$color-border;
  color: c.$color-text-primary;
  padding: v.$spacing-xs v.$spacing-md;
  border-radius: v.$border-radius-md;
  font-size: v.$font-size-sm;
  font-weight: v.$font-weight-medium;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: v.$spacing-xs;
  transition: all v.$transition-fast;
  
  &:hover {
    background-color: c.$color-hover;
    border-color: c.$color-primary;
  }
  
  i {
    font-size: v.$font-size-sm;
  }
}

@mixin button-primary {
  background-color: c.$color-primary;
  color: c.$color-text-primary;
  border: none;
  padding: v.$spacing-xs v.$spacing-md;
  border-radius: v.$border-radius-md;
  font-size: v.$font-size-sm;
  font-weight: v.$font-weight-medium;
  cursor: pointer;
  transition: all v.$transition-fast;

  &:hover {
    background-color: c.$color-primary-dark;
  }
}

@mixin button-icon {
  background-color: transparent;
  border: none;
  color: c.$color-text-secondary;
  width: 36px;
  height: 36px;
  border-radius: v.$border-radius-sm;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all v.$transition-fast;
  
  &:hover {
    background-color: c.$color-hover;
    color: c.$color-primary;
  }
  
  i {
    font-size: v.$font-size-md;
  }
}

// Button text mixin
@mixin button-text {
  font-family: v.$font-sans;
  font-size: v.$font-size-sm;
  font-weight: v.$font-weight-medium;
  line-height: 1.5;
  text-align: center;
  text-decoration: none;
  letter-spacing: 0.01em;
  background: transparent;
  border: none;
  color: c.$color-primary;
  cursor: pointer;
  padding: v.$spacing-xs v.$spacing-sm;
  transition: all v.$transition-fast;
  border-radius: v.$border-radius-sm;
  
  &:hover {
    background-color: rgba(c.$color-secondary, 0.05);
    color: c.$color-primary-light;
  }
  
  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(c.$color-primary, 0.1);
  }
}


// Component Themes
@mixin card-theme {
  background: white;
  border-radius: v.$border-radius;
  box-shadow: v.$shadow-sm;
}

@mixin input-theme {
  width: 100%;
  padding: v.$spacing-unit * 2;
  border: 1px solid c.$color-border;
  border-radius: v.$border-radius;
  
  &:focus {
    outline: none;
    border-color: c.$color-accent;
  }
}

@mixin form-label {
  font-weight: v.$font-weight-medium;
  color: c.$color-text-primary;
  margin-bottom: v.$spacing-unit;
}

@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: v.$spacing-xs;
  padding: v.$spacing-sm v.$spacing-lg;
  border: none;
  border-radius: v.$border-radius;
  font-family: v.$font-sans;
  font-size: v.$font-size-sm;
  font-weight: v.$font-weight-medium;
  line-height: 1.5;
  text-align: center;
  cursor: pointer;
  transition: all v.$transition-fast;
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
  
  i, svg {
    font-size: inherit;
  }
}

// Status Colors
@mixin status-color($status) {
  @if $status == 'active' {
    color: c.$color-success;
    background: rgba(c.$color-success, 0.1);
  } @else if $status == 'expired' {
    color: c.$color-error;
    background: rgba(c.$color-error, 0.1);
  } @else if $status == 'pending' {
    color: c.$color-warning;
    background: rgba(c.$color-warning, 0.1);
  } @else {
    color: c.$color-text-secondary;
    background: rgba(c.$color-surface, 0.1);
  }
}

// Button Themes
@mixin button-theme($variant: 'primary') {
  padding: v.$spacing-unit * 1.5 v.$spacing-unit * 3;
  border-radius: v.$border-radius;
  font-weight: v.$font-weight-medium;
  transition: all 0.2s ease;
  
  @if $variant == 'primary' {
    background: c.$color-primary;
    color: c.$color-text-light;
    border: none;
    
    &:hover:not(:disabled) {
      background: c.$color-primary-dark;
    }
  } @else if $variant == 'secondary' {
    background: c.$color-surface;
    color: c.$color-text-primary;
    border: 1px solid c.$color-border;
    
    &:hover:not(:disabled) {
      background: c.$color-surface-hover;
    }
  } @else if $variant == 'danger' {
    background: c.$color-error;
    color: white;
    border: none;
    
    &:hover:not(:disabled) {
      background: color.adjust(c.$color-error, $lightness: -10%);
    }
  }
  
  &:disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }
}

// Table Themes
@mixin table-theme {
  width: 100%;
  border-collapse: collapse;
  background: c.$color-surface;
  border-radius: v.$border-radius;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  
  th {
    background: c.$color-surface-hover;
    color: c.$color-text-secondary;
    font-weight: v.$font-weight-medium;
    text-align: left;
    padding: v.$spacing-unit * 2;
  }
  
  td {
    padding: v.$spacing-unit * 2;
    border-top: 1px solid c.$color-border;
    color: c.$color-text-primary;
  }
}

@mixin responsive($breakpoint) {
  @if $breakpoint == tablet {
    @media (max-width: 768px) { @content; }
  } @else if $breakpoint == mobile {
    @media (max-width: 640px) { @content; }
  }
}

// Flexbox mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Typography mixins
@mixin text-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin text-clamp($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Responsive mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media screen and (max-width: (v.$breakpoint-sm - 1)) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media screen and (min-width: v.$breakpoint-sm) and (max-width: (v.$breakpoint-md - 1)) {
      @content;
    }
  } @else if $breakpoint == md {
    @media screen and (min-width: v.$breakpoint-md) and (max-width: (v.$breakpoint-lg - 1)) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media screen and (min-width: v.$breakpoint-lg) and (max-width: (v.$breakpoint-xl - 1)) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media screen and (min-width: v.$breakpoint-xl) {
      @content;
    }
  }
}

// Card styling mixin
@mixin card-style {
  background-color: c.$color-surface;
  border-radius: v.$border-radius-md;
  box-shadow: v.$shadow-sm;
  padding: v.$spacing-lg;
}

// Button mixin
@mixin button-style($bg-color, $text-color) {
  background-color: $bg-color;
  color: $text-color;
  border: none;
  border-radius: v.$border-radius-sm;
  padding: v.$spacing-xs v.$spacing-md;
  font-weight: v.$font-weight-medium;
  cursor: pointer;
  transition: background-color v.$transition-fast;
  
  &:hover {
    background-color: color.adjust($bg-color, $lightness: -10%);
  }
}

// Typography mixins
@mixin body-text {
  font-family: ty.$font-family-sans-serif;
  font-size: ty.$font-size-base;
  font-weight: ty.$font-weight-regular;
  line-height: ty.$line-height-base;
}

@mixin heading-1 {
  font-family: ty.$font-family-sans-serif;
  font-size: 2.5rem;
  font-weight: ty.$font-weight-bold;
  line-height: 1.2;
}

@mixin heading-2 {
  font-family: ty.$font-family-sans-serif;
  font-size: 2rem;
  font-weight: ty.$font-weight-bold;
  line-height: 1.3;
}

@mixin heading-3 {
  font-family: ty.$font-family-sans-serif;
  font-size: 1.5rem;
  font-weight: ty.$font-weight-semibold;
  line-height: 1.3;
}

@mixin text-secondary {
  font-size: v.$font-size-sm;
  color: c.$color-text-secondary;
  font-weight: ty.$font-weight-medium;
}

@mixin text-base {
  font-size: v.$font-size-base;
  color: c.$color-text-primary;
  font-weight: ty.$font-weight-regular;
}

@mixin text-small {
  font-size: v.$font-size-xs;
  color: c.$color-text-secondary;
  font-weight: ty.$font-weight-regular;
}

// Status badge mixin
@mixin status-badge {
  display: inline-block;
  padding: v.$spacing-xs v.$spacing-sm;
  border-radius: v.$border-radius-sm;
  font-size: v.$font-size-xs;
  font-weight: v.$font-weight-medium;
  text-align: center;
  text-transform: capitalize;
  
  &.active {
    color: c.$color-success;
    background-color: rgba(c.$color-success, 0.1);
  }
  
  &.inactive, &.expired {
    color: c.$color-error;
    background-color: rgba(c.$color-error, 0.1);
  }
  
  &.pending {
    color: c.$color-warning;
    background-color: rgba(c.$color-warning, 0.1);
  }
  
  &.draft {
    color: c.$color-text-secondary;
    background-color: rgba(c.$color-text-secondary, 0.1);
  }
}