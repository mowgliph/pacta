@use '../../styles/variables' as v;
@use '../../styles/colors' as c;
@use '../../styles/mixins' as m;

.users {
  &__header {
    @include m.flex-between;
    margin-bottom: v.$spacing-xl;

    h1 {
      @include m.heading-1;
      color: c.$color-text-primary;
    }
  }

  &__filters {
    @include m.flex-between;
    gap: v.$spacing-md;
    margin-bottom: v.$spacing-lg;
    flex-wrap: wrap;
  }
}

.search-box {
  flex: 1;
  min-width: 200px;
  position: relative;

  i {
    position: absolute;
    left: v.$spacing-md;
    top: 50%;
    transform: translateY(-50%);
    color: c.$color-text-secondary;
    transition: color v.$transition-fast;
  }
  
  input {
    width: 100%;
    padding: v.$spacing-md v.$spacing-md v.$spacing-md calc(v.$spacing-xl + v.$spacing-sm);
    border: 1px solid c.$color-border;
    border-radius: v.$border-radius-md;
    font-size: v.$font-size-base;
    background: c.$color-surface;
    color: c.$color-text-primary;
    transition: border-color v.$transition-normal, box-shadow v.$transition-normal;
    
    &:focus {
      outline: none;
      border-color: c.$color-primary;
      box-shadow: 0 0 0 2px rgba(c.$color-primary, 0.2);
      
      & + i {
        color: c.$color-primary;
      }
    }
  }
}

.filter-group {
  select {
    padding: v.$spacing-md;
    border: 1px solid c.$color-border;
    border-radius: v.$border-radius-md;
    background: c.$color-surface;
    color: c.$color-text-primary;
    font-size: v.$font-size-base;
    min-width: 150px;
    transition: border-color v.$transition-normal, box-shadow v.$transition-normal;
    cursor: pointer;
    
    &:focus {
      outline: none;
      border-color: c.$color-primary;
      box-shadow: 0 0 0 2px rgba(c.$color-primary, 0.2);
    }
    
    &:hover {
      border-color: c.$color-accent;
    }
  }
}

.btn-primary {
  @include m.button-theme('primary');
  display: flex;
  align-items: center;
  gap: v.$spacing-xs;
  transition: transform v.$transition-normal;
  
  i {
    font-size: v.$font-size-base;
  }
  
  &:hover {
    transform: translateY(-2px);
  }
}

@media (max-width: v.$breakpoint-md) {
  .users {
    &__filters {
      @include m.flex-column;
      gap: v.$spacing-md;
    }
  }
}