/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/_index'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedUsersImport } from './routes/_authenticated/users'
import { Route as AuthenticatedStatisticsImport } from './routes/_authenticated/statistics'
import { Route as AuthenticatedContractsImport } from './routes/_authenticated/contracts'
import { Route as errors404Import } from './routes/(errors)/404'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as AuthenticatedContractsIndexImport } from './routes/_authenticated/contracts/index'
import { Route as AuthenticatedContractsCreateImport } from './routes/_authenticated/contracts/create'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/_index',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedUsersRoute = AuthenticatedUsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedStatisticsRoute = AuthenticatedStatisticsImport.update({
  id: '/statistics',
  path: '/statistics',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedContractsRoute = AuthenticatedContractsImport.update({
  id: '/contracts',
  path: '/contracts',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const errors404Route = errors404Import.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedContractsIndexRoute =
  AuthenticatedContractsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedContractsRoute,
  } as any)

const AuthenticatedContractsCreateRoute =
  AuthenticatedContractsCreateImport.update({
    id: '/create',
    path: '/create',
    getParentRoute: () => AuthenticatedContractsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_index': {
      id: '/_index'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404Import
      parentRoute: typeof rootRoute
    }
    '/_authenticated/contracts': {
      id: '/_authenticated/contracts'
      path: '/contracts'
      fullPath: '/contracts'
      preLoaderRoute: typeof AuthenticatedContractsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/statistics': {
      id: '/_authenticated/statistics'
      path: '/statistics'
      fullPath: '/statistics'
      preLoaderRoute: typeof AuthenticatedStatisticsImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/users': {
      id: '/_authenticated/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/contracts/create': {
      id: '/_authenticated/contracts/create'
      path: '/create'
      fullPath: '/contracts/create'
      preLoaderRoute: typeof AuthenticatedContractsCreateImport
      parentRoute: typeof AuthenticatedContractsImport
    }
    '/_authenticated/contracts/': {
      id: '/_authenticated/contracts/'
      path: '/'
      fullPath: '/contracts/'
      preLoaderRoute: typeof AuthenticatedContractsIndexImport
      parentRoute: typeof AuthenticatedContractsImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedContractsRouteChildren {
  AuthenticatedContractsCreateRoute: typeof AuthenticatedContractsCreateRoute
  AuthenticatedContractsIndexRoute: typeof AuthenticatedContractsIndexRoute
}

const AuthenticatedContractsRouteChildren: AuthenticatedContractsRouteChildren =
  {
    AuthenticatedContractsCreateRoute: AuthenticatedContractsCreateRoute,
    AuthenticatedContractsIndexRoute: AuthenticatedContractsIndexRoute,
  }

const AuthenticatedContractsRouteWithChildren =
  AuthenticatedContractsRoute._addFileChildren(
    AuthenticatedContractsRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedContractsRoute: typeof AuthenticatedContractsRouteWithChildren
  AuthenticatedStatisticsRoute: typeof AuthenticatedStatisticsRoute
  AuthenticatedUsersRoute: typeof AuthenticatedUsersRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedContractsRoute: AuthenticatedContractsRouteWithChildren,
  AuthenticatedStatisticsRoute: AuthenticatedStatisticsRoute,
  AuthenticatedUsersRoute: AuthenticatedUsersRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof authLoginRoute
  '/404': typeof errors404Route
  '/contracts': typeof AuthenticatedContractsRouteWithChildren
  '/statistics': typeof AuthenticatedStatisticsRoute
  '/users': typeof AuthenticatedUsersRoute
  '/': typeof AuthenticatedIndexRoute
  '/contracts/create': typeof AuthenticatedContractsCreateRoute
  '/contracts/': typeof AuthenticatedContractsIndexRoute
}

export interface FileRoutesByTo {
  '': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof authLoginRoute
  '/404': typeof errors404Route
  '/statistics': typeof AuthenticatedStatisticsRoute
  '/users': typeof AuthenticatedUsersRoute
  '/': typeof AuthenticatedIndexRoute
  '/contracts/create': typeof AuthenticatedContractsCreateRoute
  '/contracts': typeof AuthenticatedContractsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_index': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/(auth)/login': typeof authLoginRoute
  '/(errors)/404': typeof errors404Route
  '/_authenticated/contracts': typeof AuthenticatedContractsRouteWithChildren
  '/_authenticated/statistics': typeof AuthenticatedStatisticsRoute
  '/_authenticated/users': typeof AuthenticatedUsersRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/contracts/create': typeof AuthenticatedContractsCreateRoute
  '/_authenticated/contracts/': typeof AuthenticatedContractsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/dashboard'
    | '/login'
    | '/404'
    | '/contracts'
    | '/statistics'
    | '/users'
    | '/'
    | '/contracts/create'
    | '/contracts/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/dashboard'
    | '/login'
    | '/404'
    | '/statistics'
    | '/users'
    | '/'
    | '/contracts/create'
    | '/contracts'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_index'
    | '/dashboard'
    | '/(auth)/login'
    | '/(errors)/404'
    | '/_authenticated/contracts'
    | '/_authenticated/statistics'
    | '/_authenticated/users'
    | '/_authenticated/'
    | '/_authenticated/contracts/create'
    | '/_authenticated/contracts/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  authLoginRoute: typeof authLoginRoute
  errors404Route: typeof errors404Route
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  authLoginRoute: authLoginRoute,
  errors404Route: errors404Route,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_index",
        "/dashboard",
        "/(auth)/login",
        "/(errors)/404"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/contracts",
        "/_authenticated/statistics",
        "/_authenticated/users",
        "/_authenticated/"
      ]
    },
    "/_index": {
      "filePath": "_index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.tsx"
    },
    "/_authenticated/contracts": {
      "filePath": "_authenticated/contracts.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/contracts/create",
        "/_authenticated/contracts/"
      ]
    },
    "/_authenticated/statistics": {
      "filePath": "_authenticated/statistics.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users": {
      "filePath": "_authenticated/users.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/contracts/create": {
      "filePath": "_authenticated/contracts/create.tsx",
      "parent": "/_authenticated/contracts"
    },
    "/_authenticated/contracts/": {
      "filePath": "_authenticated/contracts/index.tsx",
      "parent": "/_authenticated/contracts"
    }
  }
}
ROUTE_MANIFEST_END */
